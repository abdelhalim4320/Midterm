Please answer the below core-java Questions:

What is programing language?

A.A programming language is a set of commands, instructions, and other syntax use to create a software program.
Languages that programmers use to write code are called "high-level languages.
This code can be compiled into a "low-level language," which is recognized directly by the computer hardware.




What jdk contains or composed of and define each components?


1.JRE: Java Runtime Environment
2.java: It’s simply a loader that works for all the java applications. Also, this particular tool interprets the class file generated by javac. The single java launcher is used for the purpose of development and deployment. Gone are the days, when JRE was used as the deployment launcher. Nowadays, JRE doesn’t exist with the Sun JDK and totally replaced by this new java loader.
3.javac: It’s a compiler. And, basically, it converts source code into Java bytecode
4.appletviewer: Through this component, without taking the help of a web browser, we can run the Java applets and even debug them.
5.apt: This is used as an annotation-processing tool
6.extcheck: For identifying the conflicts, this next check is used
7.idlj: An IDL-to-Java compiler, used to generate Java bindings from the provided Java IDL file
8.jabswitch: It is a Java Access Bridge
9.javadoc: It is a documentation generator, which produces documentation from source code comments, automatically
10.jar: It is an archiver. Along with related class libraries packages into one JAR file. Also, it manages those files
11.javafxpackager: It is a tool to attain packages and sign JavaFX applications
12.jarsigner: It’s a verification and jar signing tool
13.javah: It’s a stub generator and ‘C’ header that is used for writing built-in methods
14.javap: It’s a class file disassembler
15.javaws: It’s a Java Web Start launcher for JNLP applications
16.JConsole: It’s a Console used for Java Monitoring and Management
17.jdb: It’s a debugger
18.jhat: It’s a Java Heap Analysis Tool (experimental)
19.jinfo: It particularly used to get the configuration information from a running Java process
20.jmap: It’s an Oracle jmap which is also a Memory Map. This gives the result of the memory map for Java. On the other hand, it is useful in printing heap memory or shared object memory maps details of a particular core dump or process.
21.jmc: It’s known as a Java Mission Control
22.jps: it’s a JVM Process, Status Tool. It is capable of listing the instrumented HotSpot JVMs on the target system
23.jrunscript: It’s a Java command-line script shell
24.jstack: A tool prints Java stack traces of Java threads
25.jstat: Java Virtual Machine statistic monitoring tool
26.keytool: A tool for manipulating the Keystore
27.pack200: JAR compression tool
28.Policytool: Utility that determines the Java runtime. That means it is a policy creation and management tool.
29.VisualVM: It’s a visual tool. It is integrated with numerous command-line JDK tools.
30.wsimport: It produces portable JAX-WS artifacts with an aim to invoke a web service
31.xjc: It’s the part of the Java API boosting the XML Binding (JAXB) API. After accepting the XML schema, it generates Java classes





What is IDE?
A.is a software application that combines all of the features and tools needed by a software developer.
It's graphical in nature, meaning that it uses windows and controls like buttons to display information and accept input
from the user. For example, tools can include:

  1.A text editor: a window for the input, arrangement, and commenting of programming language code.
  2. A project editor: a window that lists all of the files that make up the software project.
  3.A tool bar: a set of buttons that represent the functions the environment can perform.
  4.An output viewer: a window that displays any messages that the environment generates during the operations it undertakes.




What are the IDEs available in the market to support java?

Eclipse
IntelliJ Idea
NetBeans
BLUEJ
JDeveloper
DrJava
Greenfoot
JGrasp
Android Studio
JCreator



Explain the entire java life cycle.

life cycle of a java program tells us what happens right from the point when we type source code in a text editor to the point that source code is converted into machine code (0’s and 1’s).

There are three main stages in the life cycle of a java program. They are:

Editing the program
Compiling the source code
Executing the byte code

1.First, you will start with typing the program in a text-editor (ex: notepad, notepad++, wordpad, textedit etc). After completing editing of the program, we have to save the file. While saving the file you should remember that the file must be saved with .java extension. For example, let’s think that I had written a Java program which contains a single class Sample (more on classes in future posts). It is a good convention to save the file with the name of the class. So, as per my example, the file will be saved as Sample.java.

2.Second step is compilation. The name of the Java compiler is javac. The input to the compiler is Java source code which is available in Sample.java. The output of the compiler is machine independent or platform independent code which is known as bytecode. The file which is generated after compilation is .class file. As per my example, the bytecode file will be Sample.class.

3.Last step is execution. The bytecode generated by the compiler will be executed by Java Virtual Machine (JVM). Input to the JVM is bytecode and output is machine code (0’s and 1’s) which will be executed by the CPU of the local machine.




what is class?

Class are a blueprint or a set of instructions to build a specific type of object.
It is a basic concept of Object-Oriented Programming which revolve around the real-life entities.
Class in Java determines how an object will behave and what the object will contain.




What is object?

Object is an instance of a class. An object in OOPS is nothing but a self-contained component which consists
of methods and properties to make a particular type of data useful. For example color name, table, bag, barking.
When you send a message to an object, you are asking the object to invoke or execute one of its methods as defined in the class.



What is the entry point of an application?

The entry point. Sometimes it’s main(). Sometimes it’s an extension point in some complicated framework.
Most importantly, it is the border where Their Stuff runs Your Stuff.




Why main is static?

A main method is static since it is available to run when the C# program starts.
It is the entry point of the program and runs without even creating an instance of the class.



Which class is the superclass of all classes?

The Object class is the super class of all classes.


What is difference between path and classpath variables?

PATH is the environment variable where we specify the locations of binaries.
Example: We add bin directory path of JDK or JRE, so that any binaries under the directory can be accessed
directly without specifying absolute path.
CLASSPATH is the path for Java application where the classes you compiled will be available.



What is the difference between an Interface and Abstract class?

1.Interface is fully abstract:
_Interface can have only abstract methods.
_Only static and final variables are permitted.
_Interface can not implement an interface, it can extend an interface.
_Interface is declared using interface keyword.
_Interface can inherit only an interface.
_Interface can only be implemented using implements keyword.
_Interface can only have public members.

2.Abstract class: (is not fully abstract):
_Abstract class can have both an abstract as well as concrete methods.
_Multiple Inheritance is not supported.
_final, non-final, static and non-static variables supported.
_Abstract class can implement an interface.
_Abstract class declared using abstract keyword.
_Abstract class can inherit another class using extends keyword and implement an interface.
_Abstract class can be inherited using extends keyword.
-Abstract class can have any type of members like private, public.



Can you make an Object from an Interface and Abstract class ? if not how do you use it ?

You cannot create an object of abstract class or interface since they are incomplete class
(interface is not even considered as a class.)
What you can do is to implement a subclass of abstract class which, of course, must not be abstract.
or extend the abstract class .


what is Access Specifier?

public - members are accessible from outside the class
private - members cannot be accessed (or viewed) from outside the class
protected - members cannot be accessed from outside the class, however, they can be accessed in inherited classes


What is OOP ? Define each feature of java OOP.

OOPs refers to languages that uses objects in programming. Object-oriented programming aims to implement
real-world entities like inheritance, hiding, polymorphism etc in programming. The main aim of OOP is to bind
together the data and the functions that operate on them so that no other part of the code can access this data

1.Polymorphism: Polymorphism refers to the ability of OOPs programming languages to differentiate between entities with
the same name efficiently. This is done by Java with the help of the signature and declaration of these entities.
2.Inheritance: Inheritance is an important pillar of OOP(Object Oriented Programming). It is the mechanism in
java by which one class is allow to inherit the features(fields and methods) of another class.
Important terminology:
    Super Class: The class whose features are inherited is known as superclass(or a base class or a parent class).
    Sub Class: The class that inherits the other class is known as subclass(or a derived class, extended class,
    or child class). The subclass can add its own fields and methods in addition to the superclass fields and methods.
    Reusability: Inheritance supports the concept of “reusability”, i.e. when we want to create a new class and there
    is already a class that includes some of the code that we want, we can derive our new class from the existing class.
3.encapsulation: the variables or data of a class is hidden from any other class and can be accessed only
 through any member function of own class in which they are declared.As in encapsulation, the data in a class is hidden
 from other classes, so it is also known as data-hiding. Encapsulation can be achieved by Declaring all the variables
 in the class as private and writing public methods in the class to set and get the values of variables.
4.Abstraction: Data Abstraction is the property by virtue of which only the essential details are displayed to the user.
The trivial or the non-essentials units are not displayed to the user. Ex: A car is viewed as a car rather than its
individual components.
5.Class: A class is a user defined blueprint or prototype from which objects are created. It represents the set of
properties or methods that are common to all objects of one type. In general, class declarations can include these components
6.Object: It is a basic unit of Object Oriented Programming and represents the real life entities.
A typical Java program creates many objects, which as you know, interact by invoking methods. An object consists of:
  State : It is represented by attributes of an object. It also reflects the properties of an object.
  Behavior : It is represented by methods of an object. It also reflects the response of an object with other objects.
  Identity : It gives a unique name to an object and enables one object to interact with other objects.
7.Method: A method is a collection of statements that perform some specific task and return result to the caller.
A method can perform some specific task without returning anything. Methods allow us to reuse the code without retyping the code
8.Message Passing: Objects communicate with one another by sending and receiving information to each other.
 A message for an object is a request for execution of a procedure and therefore will invoke a function in
 the receiving object that generates the desired results




What is Java Package and which package is imported by default?

In Java, the package is the collection of Java classes and interfaces. When we use the classes of a particular package,
we need to import that particular package in which that classes are defined. The class uses the fully qualified name
that includes the package name. In most of the basic Java programs, we do not import any package. Here, a question
arises that when we do not import any package then how Java programs allow us to use classes defined in the
particular package. JVM internally resolve this problem by importing java.lang package by default.



What is API? Name list of API that you have used so far.

API is the acronym for Application Programming Interface, which is a software intermediary that allows two applications
to talk to each other. Each time you use an app like Facebook, send an instant message, or check the weather on your phone
, you’re using an API.



Does java support multiple inheritance, explain why or why not?

C++ , Common lisp and few other languages supports multiple inheritance while java doesn’t support it.
Java doesn’t allow multiple inheritance to avoid the ambiguity caused by it. One of the example of such
problem is the diamond problem that occurs in multiple inheritance.


What is method overloading and when it happens?

Overloading allows different methods to have the same name, but different signatures where the signature can
 differ by the number of input parameters or type of input parameters or both. Overloading is related to compile-time
(or static) polymorphism.



Explain exceptions in java and how to handle it.

Exception Handling in Java is a very interesting topic. Exception is an error event that can happen during
the execution of a program and disrupts its normal flow. Java provides a robust and object oriented way to
handle exception scenarios, known as Java Exception Handling.
throw – We know that if any exception occurs, an exception object is getting created and then Java runtime starts processing to handle them. Sometime we might want to generate exception explicitly in our code, for example in a user authentication program we should throw exception to client if the password is null. throw keyword is used to throw exception to the runtime to handle it.
throws – When we are throwing any exception in a method and not handling it, then we need to use throws keyword in method signature to let caller program know the exceptions that might be thrown by the method. The caller method might handle these exceptions or propagate it to it’s caller method using throws keyword. We can provide multiple exceptions in the throws clause and it can be used with main() method also.
try-catch – We use try-catch block for exception handling in our code. try is the start of the block and catch is at the end of try block to handle the exceptions. We can have multiple catch blocks with a try and try-catch block can be nested also. catch block requires a parameter that should be of type Exception.
finally – finally block is optional and can be used only with try-catch block. Since exception halts the process of execution, we might have some resources open that will not get closed, so we can use finally block. finally block gets executed always, whether exception occurred or not.



What is static keyword in java? How it has been used in variables and methods ?

In Java, static keyword is mainly used for memory management. It can be used with variables, methods,
 blocks and nested classes. It is a keyword which is used to share the same variable or method of a given class
 Basically, static is used for a constant variable or a method that is same for every instance of a class.



What is final and how it has been used variables and methods?

In Java, the final keyword can be used while declaring an entity. Using the final keyword means that the value
can’t be modified in the future. This entity can be - but is not limited to - a variable, a class or a method.
1.Final variables:
        If a variable is declared with the final keyword, its value cannot be changed once initialized. Note that the
        variable does not necessarily have to be initialized at the time of declaration. If it’s declared but not yet initialized,
        it’s called a blank final variable.
2.A method, declared with the final keyword, cannot be overridden or hidden by subclasses.


What is final, finally and finalize?

The final keyword can be used with class method and variable. A final class cannot be instantiated, a final method cannot be overridden and a final variable cannot be reassigned.

The finally keyword is used to create a block of code that follows a try block. A finally block of code always executes, whether or not an exception has occurred. Using a finally block allows you to run any cleanup-type statements that you just wish to execute, despite what happens within the protected code.

The finalize() method is used just before object is destroyed and can be called just prior to object creation.



What is a constructor ?

A constructor in Java is a special method that is used to initialize objects. The constructor is called when
an object of a class is created. It can be used to set initial values for object attributes.



Can we have multiple constructors in a class?

A class can have multiple constructors, as long as their signature (the parameters they take) are not the same.
You can define as many constructors as you need. When a Java class contains multiple constructors, we say that
the constructor is overloaded (comes in multiple versions).



If we don't have a constructor declared, what is called during the object creation?
called the default constructor.



What is "this" keyword in java ?

The this keyword refers to the current object in a method or constructor.

The most common use of the this keyword is to eliminate the confusion between class attributes and parameters with
the same name (because a class attribute is shadowed by a method or constructor parameter)


What is "super" keyword in java? How many possible way can you use?

The super keyword in java is a reference variable that is used to refer parent class objects.  The keyword “super”
came into the picture with the concept of Inheritance. It is majorly used in the following contexts:

1. Use of super with variables: This scenario occurs when a derived class and base class has same data members.
   In that case there is a possibility of ambiguity for the JVM.
2. Use of super with methods: This is used when we want to call parent class method. So whenever a parent and child
   class have same named methods then to resolve ambiguity we use super keyword.
3. Use of super with constructors: super keyword can also be used to access the parent class constructor.
   One more important thing is that, ‘’super’ can call both parametric as well as non parametric constructors
   depending upon the situation.



What is JVM stand for ?

The Java Virtual Machine is a program whose purpose is to execute other programs.
It's a simple idea that also stands as one of our greatest examples of coding kung fu.
The JVM upset the status quo for its time, and continues to support programming innovation today.


Is JVM platform independent?

The JVM is not platform independent. Java Virtual Machine (JVM) provides the environment to execute the java file
(. Class file). So at the end it's depends on your kernel , and kernel is differ from OS (Operating System) to OS.
 The JVM is used to both translate the bytecode into the machine language for a particular computer, and actually
 execute the corresponding machine-language instructions as well. Without the JVM, you can’t run a Java application.



What version of java are you using?
java version "11.0.9" 2020-10-20 LTS
Java(TM) SE Runtime Environment 18.9 (build 11.0.9+7-LTS)
Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.9+7-LTS, mixed mode)


What is JAR stand for ?

JAR stands for "Java ARchive". A JAR file is basically a zip-file which contains a couple of class files and a
text file containing some meta information.
JAR files can be used to bundle a Java library containing many classes into a single file (which does not need
to be unzipped in order to be used by a java programmer) or to bundle a Java application into a so-called executable
JAR file (an executable JAR file is just a JAR file whose meta-information contains the information, which class is
the main class, i.e. the class whose main method should be run to execute the application).





What is the difference between JDK and JVM?

1. JDK
Java Development Kit aka JDK is the core component of Java Environment and provides all the tools, executables, and binaries required to compile, debug, and execute a Java Program.

JDK is a platform-specific software and that’s why we have separate installers for Windows, Mac, and Unix systems.

We can say that JDK is the superset of JRE since it contains JRE with Java compiler, debugger, and core classes.

2. JVM
JVM is the heart of Java programming language. When we execute a Java program, JVM is responsible for converting the byte code to the machine-specific code.




What is the difference between JVM and JRE?

JDK is a software development kit whereas JRE is a software bundle that allows Java program to run, whereas JVM is an environment for executing bytecode.
The full form of JDK is Java Development Kit, while the full form of JRE is Java Runtime Environment, while the full form of JVM is Java Virtual Machine.
JDK is platform dependent, JRE is also platform dependent, but JVM is platform independent.
JDK contains tools for developing, debugging, etc. JRE contains class libraries and other supporting files, whereas software development tools are not included in JVM.
JDK comes with the installer, on the other hand, JRE only contains the environment to execute source code whereas JVM bundled in both software JDK and JRE.



What is compile time and run time?

Compile-time and Runtime are the two programming terms used in the software development.
Compile-time is the time at which the source code is converted into an executable code while
the run time is the time at which the executable code is started running.
Both the compile-time and runtime refer to different types of error.



What is heap?

Heap is a special case of balanced binary tree data structure where the root-node key is compared with its
children and arranged accordingly. If α has child node β then −
key(α) ≥ key(β)
As the value of parent is greater than that of child, this property generates Max Heap. Based on this criteria,
a heap can be of two types :
1.Min-Heap − Where the value of the root node is less than or equal to either of its children.
2.Max-Heap − Where the value of the root node is greater than or equal to either of its children.



How java manage it's memory?

In Java, memory management is the process of allocation and de-allocation of objects, called Memory management.
Java does memory management automatically. Java uses an automatic memory management system called a garbage collector.
Thus, we are not required to implement memory management logic in our application. Java memory management divides into
two major parts:
1.JVM Memory Structure
2.Working of the Garbage Collector


What is the difference between String, StringBuffer and StringBuilder?

The differences between String, StringBuffer, and StringBuilder are based on the following two parameters:
1.Mutability
Strings are immutable while
StringBuffer and StringBuilder are mutable. So, Strings cannot be changed when you use the String class; whereas Strings
can change if you use the StringBuffer and StringBuilder class.
2.StringBuilder is faster than StringBuffer as it offers no synchronization. This is because no extra overhead needs to
be added to the system and also does not slows down the processing.



What is Singleton class?

In object-oriented programming, a singleton class is a class that can have only one object (an instance of the class) at a time.
After first time, if we try to instantiate the Singleton class, the new variable also points to the first instance created
 So whatever modifications we do to any variable inside the class through any instance, it affects the variable of the
single instance created and is visible if we access that variable through any variable of that class type defined.
To design a singleton class:
_Make constructor as private.
_Write a static method that has return type object


What is Serialization and Deserialization?

Serialization is a mechanism of converting the state of an object into a byte stream.
Deserialization is the reverse process where the byte stream is used to recreate the actual Java object in memory.
This mechanism is used to persist the object.



when to use transient variable in java?

Transient in Java is used to mark the member variable not to be serialized when it is persisted to streams of bytes.
This keyword plays an important role to meet security constraints in Java. It ignores the original value of a variable
and saves the default value of that variable data type.


Difference between while and do..while loop?

do-while loop is similar to while loop, however there is a difference between them: In while loop, condition is
evaluated first and then the statements inside loop body gets executed, on the other hand in do-while loop,
statements inside do-while gets executed first and then the condition is evaluated.


What is Enum?

An enum is a special "class" that represents a group of constants (unchangeable variables, like final variables).

To create an enum, use the enum keyword (instead of class or interface), and separate the constants with a comma.
Note that they should be in uppercase letters.


What is Iterator?

An Iterator is an object that can be used to loop through collections, like ArrayList and HashSet.
It is called an "iterator" because "iterating" is the technical term for looping.
To use an Iterator, you must import it from the java.util package.


Which one will take more memory, an int or Integer?

int is a primitive data type which takes 32 bits(4 bytes) to store.
Integer is an object which takes 128 bits (16 bytes) to store int value so each Integer
object can occupy 4 (or more) times the storage space as a primitive 'int'. so Integer take more memory



Why is String Immutable in Java?

Because java uses the concept of string literal. Suppose there are 5 reference variables,all refers
to one object "sachin". If one reference variable changes the value of the object, it will be affected to all the
reference variables. That is why string objects are immutable in java.


What is constructor chaining in Java?

Constructor chaining is the process of calling one constructor from another constructor with respect to current object.
Constructor chaining can be done in two ways:
Within same class: It can be done using this() keyword for constructors in same class
From base class: by using super() keyword to call constructor from the base class.



The difference between Serial and Parallel Garbage Collector?

a serial collector is a default copying collector which uses only one GC thread for the GC operation,
while a parallel collector uses multiple GC threads for the GC operation.


What is JIT stands for?

In computing, just-in-time (JIT) compilation (also dynamic translation or run-time compilations)
is a way of executing computer code that involves compilation during execution of a program – at run time – rather
than before execution.




Explain Java Heap space and Garbage collection?
Java objects reside in an area called the heap. The heap is created when the JVM starts up and may increase or decrease
in size while the application runs. When the heap becomes full, garbage is collected.
During the garbage collection objects that are no longer used are cleared, thus making space for new objects.



Can you guarantee the garbage collection process?
 NO . Garbage collection does not guarantee that a program will not run out of memory.
 It is perfectly possible for a programmer to mistakenly create objects which never go out of scope,
 thus consuming more and more memory until all heap is exhausted.



What is the difference between stack and heap in Java?
 The JVM divides the memory into two parts: stack memory and heap memory. From the perspective of Java,
both are important memory areas but both are used for different purposes. The major difference between
Stack memory and heap memory is that the stack is used to store the order of method execution and local variables
while the heap memory stores the objects and it uses dynamic memory allocation and deallocation.



What is reflection in java and why is it useful?
Reflection is an API which is used to examine or modify the behavior of methods, classes, interfaces at runtime.
The required classes for reflection are provided under java.lang.reflect package.
Reflection gives us information about the class to which an object belongs and also the methods of that class which can
be executed by using the object.
Through reflection we can invoke methods at runtime irrespective of the access specifier used with them.



what is multithreading in java?
MULTITHREADING in Java is a process of executing two or more threads simultaneously to maximum utilization of CPU.
Multithreaded applications execute two or more threads run concurrently. Hence, it is also known as Concurrency in Java.
Each thread runs parallel to each other.



What is the use of synchronization in Java?
Synchronized keyword in Java is used to provide mutually exclusive access to a shared resource with multiple threads in Java.
Synchronization in Java guarantees that no two threads can execute a synchronized method which require



What is Framework?
Java™ frameworks are bodies of prewritten code used by developers to create apps using the Java programming language.
Java frameworks may include predefined classes (such as categories of objects) and functions that can be used to process,
input, and manage hardware devices, as well as interact with system software.



What are the testing Framework available in java?
JBehave.
JUnit.
Serenity.
TestNG.
Selenide.
Gauge.
Geb.
Spock.


Difference between jUnit and testNG?

Both Testing and Junit are Testing framework used for Unit Testing. TestNG is similar to JUnit.
Few more functionalities are added to it that makes TestNG more powerful than JUnit.

1.Test annotation


@Test


@Test

2.Execute before the first test method in the current class is invoked.
  @BeforeAll


  @BeforeClass

3.Execute after all the test methods in the current class have been run.
  @AfterAll


  @AfterClass

4.Execute before each test method


  @BeforeEach


  @BeforeMethod

5.Execute after each test method


  @AfterEach


  @AfterMethod




What are the dependencies for this project?
JSON:
gson-2.6.2.jar
java-json.jar
javax.json-1.0.jar

JUnit4:
hamcrest-core-1.3.jar
junit-4.13.1.jar

JUnit5.4:
apiguardian-api-1.0.0.jar
junit-jupiter-5.4.2.jar
junit-jupiter-api-5.4.2.jar
junit-jupiter-engine-5.4.2.jar
junit-jupiter-params-5.4.2.jar
junit-platform-commons-1.4.2.jar
junit-platform-engine-1.4.2.jar
opentest4j-1.1.1.jar

MongDB:
mongo-java-driver-3.4.0.jar

MySqlConnector:
mysql-connector-java-8.0.23.jar

poi-4.1.2:
poi-scratchpad-4.1.2.jar
activation-1.1.1.jar
poi-ooxml-schemas-4.1.2.jar
commons-codec-1.13.jar
commons-collections4-4.4.jar
commons-compress-1.19.jar
commons-logging-1.2.jar
commons-math3-3.6.1.jar
jaxb-api-2.3.1.jar
jaxb-core-2.3.0.1.jar
jaxb-impl-2.3.2.jar
junit-4.12.jar
log4j-1.2.17.jar
SparseBitSet-1.2.jar
poi-4.1.2.jar
poi-excelant-4.1.2.jar
poi-examples-4.1.2.jar
poi-ooxml-4.1.2.jar

TestNG:
testng-6.8.7.jar



what is dependency injection in java?
In software engineering, dependency injection is a technique whereby one object (or static method) supplies
the dependencies of another object


What is static binding and dynamic binding?
Static binding uses Type information for binding while Dynamic binding uses Objects to resolve binding.
Overloaded methods are resolved (deciding which method to be called when there are multiple methods with same name)
using static binding while overridden methods using dynamic binding,









